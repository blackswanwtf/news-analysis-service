# Black Swan News Analysis Service - Environment Configuration
# Author: Muhammad Bilal Motiwala
# Project: Black Swan

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# OpenRouter API Configuration
# Get your API key from: https://openrouter.ai/
# This is used for LLM access (GPT models) and Perplexity search
OPENROUTER_API_KEY=your_openrouter_api_key_here

# RSS Feed Service URL
# URL of the RSS Feed Service that provides news articles
# Example: http://localhost:8080 or https://your-rss-service.com
RSS_FEED_SERVICE_URL=http://localhost:8080

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Server Configuration
# Port for the Express server (default: 8088)
PORT=8088

# Environment
# Set to 'production' for production deployment
# Set to 'development' for development with additional logging
NODE_ENV=development

# =============================================================================
# FIREBASE CONFIGURATION
# =============================================================================
# Note: Firebase configuration is handled via serviceAccountKey.json file
# Place your Firebase service account key file in the project root
# The file should be named: serviceAccountKey.json
# 
# To get your service account key:
# 1. Go to Firebase Console (https://console.firebase.google.com/)
# 2. Select your project
# 3. Go to Project Settings > Service Accounts
# 4. Click "Generate new private key"
# 5. Download the JSON file and rename it to serviceAccountKey.json
# 6. Place it in the project root directory

# =============================================================================
# ANALYSIS CONFIGURATION (Advanced)
# =============================================================================
# These settings can be modified in the CONFIG object in index.js
# Uncomment and modify if you need to override defaults

# Analysis Interval (Cron Expression)
# Default: "58 * * * *" (every hour at 58 minutes)
# ANALYSIS_INTERVAL=58 * * * *

# Maximum Articles Per Analysis
# Default: 50
# MAX_ARTICLES_PER_ANALYSIS=50

# Article Lookback Hours
# Default: 6 hours
# ARTICLE_LOOKBACK_HOURS=6

# Article Retention Hours
# Default: 6 hours
# ARTICLE_RETENTION_HOURS=6

# Cleanup Interval (Cron Expression)
# Default: "0 */2 * * *" (every 2 hours)
# CLEANUP_INTERVAL=0 */2 * * *

# =============================================================================
# LLM CONFIGURATION (Advanced)
# =============================================================================
# These settings can be modified in the CONFIG object in index.js

# LLM Model
# Default: "openai/gpt-5-mini"
# LLM_MODEL=openai/gpt-5-mini

# LLM Max Tokens
# Default: 50000
# LLM_MAX_TOKENS=50000

# LLM Timeout (milliseconds)
# Default: 60000 (60 seconds)
# LLM_TIMEOUT=60000

# =============================================================================
# PERPLEXITY CONFIGURATION (Advanced)
# =============================================================================
# These settings can be modified in the CONFIG object in index.js

# Perplexity Max Tokens
# Default: 70000
# PERPLEXITY_MAX_TOKENS=70000

# Perplexity Timeout (milliseconds)
# Default: 60000 (60 seconds)
# PERPLEXITY_TIMEOUT=60000

# =============================================================================
# SECURITY CONFIGURATION (Advanced)
# =============================================================================
# These settings can be modified in the Express app configuration

# Rate Limiting
# Default: 100 requests per 15 minutes per IP
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100

# Request Size Limit
# Default: 10MB
# REQUEST_SIZE_LIMIT=10mb

# =============================================================================
# LOGGING CONFIGURATION (Advanced)
# =============================================================================
# These settings can be modified in the logging configuration

# Log Level
# Options: error, warn, info, debug
# LOG_LEVEL=info

# Enable Debug Logging
# Set to 'true' for detailed debug information
# DEBUG=false

# =============================================================================
# MONITORING CONFIGURATION (Advanced)
# =============================================================================
# These settings can be modified for monitoring and alerting

# Health Check Interval (milliseconds)
# Default: 30000 (30 seconds)
# HEALTH_CHECK_INTERVAL=30000

# Metrics Collection
# Set to 'true' to enable detailed metrics collection
# ENABLE_METRICS=false

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Production Environment
# Set to 'true' when deploying to production
# PRODUCTION=false

# SSL Configuration (for HTTPS)
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem

# Database Connection Pool
# DB_POOL_MIN=2
# DB_POOL_MAX=10

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Development Environment Example:
# NODE_ENV=development
# PORT=8088
# OPENROUTER_API_KEY=sk-or-v1-your-dev-key
# RSS_FEED_SERVICE_URL=http://localhost:8080

# Production Environment Example:
# NODE_ENV=production
# PORT=8088
# OPENROUTER_API_KEY=sk-or-v1-your-prod-key
# RSS_FEED_SERVICE_URL=https://your-rss-service.com
# PRODUCTION=true

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Always use the .env.example file as a template
# 3. Keep your API keys secure and rotate them regularly
# 4. Use different API keys for development and production
# 5. Monitor your API usage to avoid exceeding limits
# 6. Test all configuration changes in a development environment first

# =============================================================================
# SUPPORT
# =============================================================================

# For configuration help or issues:
# 1. Check the README.md file for detailed setup instructions
# 2. Review the API documentation for endpoint configurations
# 3. Check the service logs for configuration-related errors
# 4. Verify all required services (RSS Feed Service, Firebase) are accessible
